const Post = require("../model/post.model");
const Comment = require("../model/comment.model");
const User = require("../model/user.model.js");
const colors = require("colors");
const bcrypt = require("bcryptjs");
const sgMail = require("@sendgrid/mail");
const jwt = require("jsonwebtoken");
sgMail.setApiKey(process.env.SENDGRID_API_KEY);

const handleError = (err, next) => {
  const error = new Error(err);
  error.httpStatusCode = 500;
  next(error);
};

exports.postLogin = (req, res, next) => {
  const email = req.body.email;
  const password = req.body.password;

  const lowerCaseEmail = email.toLowerCase();

  User.findOne({ email: lowerCaseEmail })
    .then((user) => {
      if (!user) {
        return res.status(401).json({
          message: "User does not exist in our database",
        });
      }

      bcrypt.compare(password, user.password).then((doMatch) => {
        if (!doMatch) {
          console.log(doMatch);
          return res.status(401).json({
            accessToken: null,
            user: null,
            message: "Password is not correct, try again!",
          });
        }

        const token = jwt.sign(
          {
            id: user._id.toString(),
          },
          process.env.SECRET,
          {
            expiresIn: 84600,
          }
        );

        res.status(200).json({
          token: token,
          user: {
            userId: user._id.toString(),
            firstName: user.firstname,
            lastName: user.lastname,
            userImg: user.userImg,
            email: user.email,
            role: user.role,
            handle: user.handle,
          },
          message: "Login Successful",
        });
      });
    })
    .catch((err) => {
      handleError(err);
    });
};

exports.postSignup = (req, res, next) => {
  const email = req.body.email;
  const password = req.body.password;

  if (email == false || password == false) {
    return res.status(400).json("Undefined data");
  }

  User.findOne({ email: email })
    .then((user) => {
      if (user) {
        return res
          .status(400)
          .json({ message: "User already exist in our database" });
      }

      const hashedPassword = bcrypt.hashSync(password, 12);
      const person = new User({
        email: email.toLowerCase(),
        password: hashedPassword,
      });
      person.save();

  

      const msg = {
        to: email.toLowerCase().toString(),
        from: "trippledev@grr.la",
        subject: "Signup succeeded",
        text: "Welcome once again",
        html: "<div1>Successfully signed up.<p>Welcome to My Demo App</p></div>",
      };
      try {
        sgMail.send(msg);
        console.log("Email sent");
        res.status(200).json({
          message: "Successfully Signed Up",
        });
      } catch (err) {
        handleError(err);
      }
    })
    .catch();
};

exports.logout = (req, res, next) => {
  res.set("Authorization", "");
  // send a response back to the client
};
